openapi: 3.0.2
info:
  title: Messsaging Service
  description: >-
    Application to send and receive messages between clients.
  contact:
    name: Visable
    url: 'https://www.Visable.com'
    email: 'abdelghany.marzouk.91@gmail.com'
  version: 0.0.1
tags:
  - name: Messaging Service
    description: Application to send and receive messages between clients
servers:
  - url: '{protocol}://{server}:{port}/{basePath}'
    description: Internal Server
    variables:
      protocol:
        enum:
          - http
          - https
        default: http
      server:
        default: localhost
      basePath:
        default: api/messaging-service
      port:
        enum:
          - '80'
          - '443'
          - '8080'
        default: '8080'
paths:
  /user:
    post:
      tags:
        - Messaging Service
      summary: "Create user"
      description: "Create new User"
      operationId: "createUser"
      requestBody:
        description: User object that needs to be added.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        default:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  userId:
                    type: string
                    format: uuid

  /sendMessage:
    post:
      tags:
        - Messaging Service
      summary: "send Message"
      description: "send Message"
      operationId: "sendMessage"
      parameters:
        - name: userId
          in: header
          description: Your User Id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: Message object details to be sent.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Message"
      responses:
        default:
          description: "successful operation"
  /getReceivedMessages:
    get:
      tags:
        - Messaging Service
      summary: Get All Received Messages
      description: Get All Received Messages
      operationId: getReceivedMessages
      parameters:
        - name: userId
          in: header
          required: true
          description: Your User Id
          schema:
            type: string
            format: uuid
        - name: pageNumber
          in: query
          description: The page number of the records to retrieve. Default value is 1
          required: false
          schema:
            type: integer
            format: int32
            default: 1
            minimum: 1
            maximum: 2147483647
        - name: pageSize
          in: query
          description: The max number of records to retrieve per page. Default value is 10, max value is 25.
          required: false
          schema:
            type: integer
            format: int32
            default: 10
            minimum: 1
            maximum: 25

      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Messages'
        400:
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        500:
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'

  /getReceivedMessagesFromParticularUser/{userIdToSearchBy}:
    get:
      tags:
        - Messaging Service
      summary: Get All Received Messages from particular user
      description: Get All Received Messages from particular user
      operationId: getReceivedMessagesFromParticularUser
      parameters:
        - name: userId
          in: header
          description: Your User Id
          required: true
          schema:
            type: string
            format: uuid
        - name: userIdToSearchBy
          in: path
          description: User that you want to get his sent messages to you
          required: true
          schema:
            type: string
            format: uuid
        - name: pageNumber
          in: query
          description: The page number of the records to retrieve. Default value is 1
          required: false
          schema:
            type: integer
            format: int32
            default: 1
            minimum: 1
            maximum: 2147483647
        - name: pageSize
          in: query
          description: The max number of records to retrieve per page. Default value is 10, max value is 25.
          required: false
          schema:
            type: integer
            format: int32
            default: 10
            minimum: 1
            maximum: 25
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Messages'
        400:
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        500:
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'

  /getSentMessages:
    get:
      tags:
        - Messaging Service
      summary: Get All Sent Messages
      description: Get All Sent Messages
      operationId: getSentMessages
      parameters:
        - name: userId
          in: header
          description: Your User Id
          required: true
          schema:
            type: string
            format: uuid
        - name: pageNumber
          in: query
          description: The page number of the records to retrieve. Default value is 1
          required: false
          schema:
            type: integer
            format: int32
            default: 1
            minimum: 1
            maximum: 2147483647
        - name: pageSize
          in: query
          description: The max number of records to retrieve per page. Default value is 10, max value is 25.
          required: false
          schema:
            type: integer
            format: int32
            default: 10
            minimum: 1
            maximum: 25
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Messages'
        400:
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        500:
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'

components:
  schemas:
    Messages:
      type: object
      properties:
        pagination:
          $ref: "#/components/schemas/Pagination"
        messages:
          type: array
          items:
            $ref: "#/components/schemas/Message"
    Message:
      type: object
      description: >
        Message
      properties:
        content:
          type: string
        sentBy:
          type: string
          format: uuid
          readOnly: true
        sentTo:
          type: string
          format: uuid
        sentOn:
          type: string
          format: date-time
          readOnly: true
    User:
      type: object
      properties:
        nickName:
          type: string
          description: user nick name.
    Pagination:
      type: object
      properties:
        pageNumber:
          type: integer
          description: The current page number.
        pageSize:
          type: integer
          description: The max number of records that can be retrieved on this page.
        total:
          type: integer
          description: The total number of records.
    Problem:
      type: object
      properties:
        type:
          type: string
          format: uri
          description: |
            An absolute URI that identifies the problem type.  When dereferenced,
            it SHOULD provide human-readable documentation for the problem type
            (e.g., using HTML).
          default: 'about:blank'
        title:
          type: string
          description: |
            A short, summary of the problem type. Written in english and readable
            for engineers (usually not suited for non-technical stakeholders and
            not localized); example: Service Unavailable
        status:
          type: integer
          format: int32
          description: |
            The HTTP status code generated by the origin server for this occurrence
            of the problem.
          minimum: 100
          maximum: 600
          exclusiveMaximum: true
          example: 500
        detail:
          type: string
          description: |
            A human readable explanation specific to this occurrence of the
            problem.
          example: Connection to database timed out
        instance:
          type: string
          format: uri
          description: |
            An absolute URI that identifies the specific occurrence of the problem.
            It may or may not yield further information if dereferenced.